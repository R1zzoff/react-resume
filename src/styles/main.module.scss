@use './variables.scss' as var;
@use './mixins.scss' as mixin;

$circle_verticalPos: calc(-1.5em + var.$mainPadding);
$circle_horizontPos: calc(0px + var.$mainPadding);

.circle
{
    position: absolute;

    width: 3em;
    height: 3em;

    font-size: inherit;

    transition: width 0.2s,
                height 0.2s;

    cursor: pointer;
    overflow: hidden;

    @include mixin.hover
    {
        width: 3.2em;
        height: 3.2em;
    }
}

.svg
{
    width: 100%;
    height: 100%;

    stroke: var(--bgElement1);
    stroke-width: 1px;

    fill: transparent;
    
    transition: stroke var.$colorChangeDuration;

    animation-duration: 18s;
    animation-timing-function: linear;

    @include mixin.dashArrayAnimation(40, 32);
}

.circleActivated
{

    &::before
    {
        content: '';

        position: absolute;

        width: 40%;
        height: 40%;

        left: 50%;
        top: 50%;

        transform: translate(-50%, -50%);

        border-radius: 5em;
        border: 4px solid var(--bgElement1);

        transition: border-color var.$colorChangeDuration;
    }
    
}

.main
{
    position: relative;

    width: 100%;
    height: 24.5em;

    padding: 5em;

    font-size: 20px;

    background-color: var(--bgSite);

    transition: background-color var.$colorChangeDuration;

    .circle_tl
    {
        @extend .circle;

        top: $circle_verticalPos;
        left: $circle_horizontPos;

        svg
        {
            @extend .svg;

            animation-direction: alternate-reverse;
        }
    
        &_active
        {
            @extend .circle_tl;
            @extend .circleActivated;
        }
    }

    .circle_tr
    {
        @extend .circle;
        
        top: $circle_verticalPos;
        right: $circle_horizontPos;

        svg
        {
            @extend .svg;
        }

        &_active
        {
            @extend .circle_tr;
            @extend .circleActivated;
        }
    }
    .circle_bl
    {
        @extend .circle;
        
        bottom: $circle_verticalPos;
        left: $circle_horizontPos;

        svg
        {
            @extend .svg;

            animation-direction: alternate-reverse;
            animation-delay: -15s;
        }

        &_active
        {
            @extend .circle_bl;
            @extend .circleActivated;
        }
    }
    .circle_br
    {
        @extend .circle;

        bottom: $circle_verticalPos;
        right: $circle_horizontPos;

        svg
        {
            @extend .svg;

            animation-delay: -25s;
        }

        &_active
        {
            @extend .circle_br;
            @extend .circleActivated;
        }
    }

    .main_content
    {
        position: relative;

        width: 60%;
        height: 15em;

        font-size: inherit;

        margin: auto;

        background-color: red;
    }
}

@media (max-width: var.$tablet)
{
    .circle
    {
        font-size: 18px;
    }
}
@media (max-width: var.$mobile_small)
{
    .main
    {
        margin-bottom: 6em;
    }
    .circle
    {
        font-size: 12px;
    }
}